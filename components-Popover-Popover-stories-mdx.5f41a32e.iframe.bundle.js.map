{"version":3,"file":"components-Popover-Popover-stories-mdx.5f41a32e.iframe.bundle.js","mappings":";AAaA;AACA;;ACUA;;AAKA;;AAIA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;AAGA;AAGA;;AAgBA;;AAKA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;AAOA;;;;;;AAMA;;;;;AAMA;;;;;AAKA;;;AAOA;AASA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAUA;;AAUA;;AAGA;;AAGA;;AAMA;;;;;;;;;AC3NA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAgBA;;;;;;AC1CA","sources":["webpack://@lokalise/louis/./src/components/Popover/Popover.stories.mdx","webpack://@lokalise/louis/./src/components/Button/styles.ts","webpack://@lokalise/louis/./src/components/Popover/styles.ts","webpack://@lokalise/louis/./src/foundations/icons/styles.ts"],"sourcesContent":["\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"/home/runner/work/louis/louis/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport { Meta, Story, Canvas, ArgsTable } from '@storybook/addon-docs';\nimport { styled } from '@lokalise/styled';\nimport { value } from '../../utils/theme';\nimport { Button } from '../Button';\nimport { Popover } from './Popover';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const PopoverContent = Object.assign(styled.div`\n\t\tcolor: ${value('color.text.default')};\n\t`, {\n  displayName: 'div'\n});\nexport const Template = args => /*#__PURE__*/_jsx(Popover, { ...args\n});\n\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, { ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {})\n  }) : _createMdxContent();\n\n  function _createMdxContent() {\n    const _components = Object.assign({\n      div: \"div\",\n      h1: \"h1\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\",\n      p: \"p\",\n      strong: \"strong\",\n      code: \"code\",\n      h3: \"h3\",\n      pre: \"pre\"\n    }, _provideComponents(), props.components);\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Meta, {\n        title: \"Components/Popover\",\n        component: Popover,\n        parameters: {\n          controls: {\n            sort: 'requiredFirst',\n            exclude: ['children', 'content', 'components']\n          },\n          docs: {\n            source: {\n              excludeDecorators: true\n            }\n          }\n        },\n        decorators: [Story => /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            margin: '45px'\n          },\n          children: Story()\n        })]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n        id: \"popover\",\n        children: \"Popover\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#overview\",\n            children: \"Overview\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#figma-design-file\",\n            children: \"Figma Design File\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#props\",\n            children: \"Props\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#examples\",\n            children: \"Examples\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"overview\",\n        children: \"Overview\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Popover is used to display in-product help content, attached to the child element passed to it.\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Popover depends on:\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"https://floating-ui.com/\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Floating UI\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [/*#__PURE__*/_jsx(_components.strong, {\n          children: \"* NOTE:\"\n        }), \" The \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"Popover\"\n        }), \" relies on user interactions for the trigger, and we do not want to modify its styles through Popover. Therefore, we do not recommend using \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"styled(Popover)\"\n        }), \" directly. If you wish to customize the \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"Popover\"\n        }), \", you can provide your own \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"Content\"\n        }), \" and \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"Arrow\"\n        }), \" components via the \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"components\"\n        }), \" prop.\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"installation\",\n        children: \"Installation\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"npm install @lokalise/louis\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"usage\",\n        children: \"Usage\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import { Popover } from '@lokalise/louis';\\n\\nexport default () => (\\n  <Popover content=\\\"Popover content\\\">Hello World</Popover>;\\n)\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"figma-design-file\",\n        children: \"Figma Design File\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"https://www.figma.com/file/zfCOLmZam4nrttG6IVzQyz/UI-Library?node-id=4029%3A21088\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Figma Source File | Popover\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"props\",\n        children: \"Props\"\n      }), \"\\n\", /*#__PURE__*/_jsx(ArgsTable, {\n        of: Popover,\n        sort: \"requiredFirst\"\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"examples\",\n        children: \"Examples\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"trigger-event\",\n        children: \"Trigger Event\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(Canvas, {\n        withSource: \"open\",\n        children: [/*#__PURE__*/_jsx(Story, {\n          name: \"On Click\",\n          args: {\n            withArrow: true,\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Popover content\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"On click\"\n            })\n          },\n          children: Template.bind({})\n        }), /*#__PURE__*/_jsx(Story, {\n          name: \"On Hover\",\n          args: {\n            withArrow: true,\n            triggerEvent: 'hover',\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Popover content\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"On hover\"\n            })\n          },\n          children: Template.bind({})\n        }), /*#__PURE__*/_jsx(Story, {\n          name: \"On Disabled Hover\",\n          args: {\n            withArrow: true,\n            triggerEvent: 'hover',\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Popover content\"\n            }),\n            children: /*#__PURE__*/_jsx(_components.div, {\n              children: /*#__PURE__*/_jsx(Button, {\n                variant: \"outline\",\n                disabled: true,\n                children: \"On disabled hover\"\n              })\n            })\n          },\n          children: Template.bind({})\n        })]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"offset\",\n        children: \"Offset\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Offset\",\n          args: {\n            withArrow: false,\n            offset: 5,\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Popover content\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"Offset: 5\"\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"placements\",\n        children: \"Placements\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Placement\",\n          args: {\n            withArrow: true,\n            placement: 'right',\n            open: true,\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Right\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"Right\"\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"delay\",\n        children: \"Delay\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Delay\",\n          args: {\n            triggerEvent: 'hover',\n            delay: 2000,\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Popover content\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"Delay 2 seconds\"\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"render-in-portal\",\n        children: \"Render in Portal\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Portal\",\n          args: {\n            inPortal: true,\n            content: /*#__PURE__*/_jsx(PopoverContent, {\n              style: {\n                padding: '16px'\n              },\n              children: \"Rendered in `div.louis-portal`\"\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"outline\",\n              children: \"Open in Portal\"\n            })\n          },\n          children: Template.bind({})\n        })\n      })]\n    });\n  }\n}\n/* ========= */\n\n\nexport const onClick = Template.bind({});\nonClick.storyName = 'On Click';\nonClick.args = {\n  withArrow: true,\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Popover content\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"On click\"\n  })\n};\nonClick.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const onHover = Template.bind({});\nonHover.storyName = 'On Hover';\nonHover.args = {\n  withArrow: true,\n  triggerEvent: \"hover\",\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Popover content\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"On hover\"\n  })\n};\nonHover.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const onDisabledHover = Template.bind({});\nonDisabledHover.storyName = 'On Disabled Hover';\nonDisabledHover.args = {\n  withArrow: true,\n  triggerEvent: \"hover\",\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Popover content\"\n  }),\n  children: /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Button, {\n      variant: \"outline\",\n      disabled: true,\n      children: \"On disabled hover\"\n    })\n  })\n};\nonDisabledHover.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const offset = Template.bind({});\noffset.storyName = 'Offset';\noffset.args = {\n  withArrow: false,\n  offset: 5,\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Popover content\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"Offset: 5\"\n  })\n};\noffset.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const placement = Template.bind({});\nplacement.storyName = 'Placement';\nplacement.args = {\n  withArrow: true,\n  placement: \"right\",\n  open: true,\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Right\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"Right\"\n  })\n};\nplacement.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const delay = Template.bind({});\ndelay.storyName = 'Delay';\ndelay.args = {\n  triggerEvent: \"hover\",\n  delay: 2000,\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Popover content\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"Delay 2 seconds\"\n  })\n};\ndelay.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nexport const portal = Template.bind({});\nportal.storyName = 'Portal';\nportal.args = {\n  inPortal: true,\n  content: /*#__PURE__*/_jsx(PopoverContent, {\n    style: {\n      padding: \"16px\"\n    },\n    children: \"Rendered in `div.louis-portal`\"\n  }),\n  children: /*#__PURE__*/_jsx(Button, {\n    variant: \"outline\",\n    children: \"Open in Portal\"\n  })\n};\nportal.parameters = {\n  storySource: {\n    source: 'args => <Popover {...args} />'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Popover',\n  parameters: {\n    controls: {\n      sort: \"requiredFirst\",\n      exclude: [\"children\", \"content\", \"components\"]\n    },\n    docs: {\n      source: {\n        excludeDecorators: true\n      }\n    }\n  },\n  decorators: [Story => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      margin: \"45px\"\n    },\n    children: Story()\n  })],\n  component: Popover,\n  tags: ['stories-mdx'],\n  includeStories: [\"onClick\", \"onHover\", \"onDisabledHover\", \"offset\", \"placement\", \"delay\", \"portal\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = { ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","import { css, type CssDeclaration, modifier, styled, variants } from '@lokalise/styled';\n\nimport { LoadingSignIcon } from '../../foundations/icons';\nimport { spacing, typography, value } from '../../utils/theme';\nimport { Pressable } from '../Pressable';\n\nexport type Size = 'xs' | 'sm' | 'md' | 'lg';\nexport type Appearance = 'accent' | 'danger' | 'warning';\nexport type Variant = 'primary' | 'secondary' | 'tertiary';\n\ntype ButtonProps = {\n\t$size: Size;\n\t$variant: Variant;\n\t$appearance: Appearance;\n\t$active: boolean;\n\tdisabled: boolean;\n\t$isLoading: boolean;\n};\n\nconst isDisabledModifier = (style: CssDeclaration<ButtonProps>) =>\n\tmodifier(\n\t\t({ $isLoading }: ButtonProps) => !$isLoading,\n\t\tcss<ButtonProps>`\n\t\t\t&:disabled {\n\t\t\t\t${style}\n\t\t\t}\n\t\t`,\n\t);\n\nexport const defineAppearance = (\n\tinput: Record<'idle' | 'hover' | 'active' | 'disabled', CssDeclaration<ButtonProps>>,\n) => css<ButtonProps>`\n\t// Idle\n\t${input.idle};\n\n\t// Hover\n\t&:hover:not([disabled]):not([aria-expanded='true']) {\n\t\t${input.hover};\n\t}\n\n\t// Pressed\n\t&:active:not([disabled]):not([aria-expanded='true']),\n\t&:focus:active:not([disabled]):not([aria-expanded='true']) {\n\t\t${input.active};\n\t}\n\n\t// Activated\n\t${modifier('$active', input.active)};\n\n\t// Disabled\n\t${isDisabledModifier(input.disabled)}\n`;\n\nexport const Container = styled(Pressable)<ButtonProps>`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground-color: transparent;\n\tborder: 1px solid transparent;\n\ttext-decoration: none;\n\tvertical-align: middle;\n\tborder-radius: ${value('radius.m')};\n\tcursor: pointer;\n\tposition: relative;\n\ttransition: all ${value('transition.default')};\n\tbox-sizing: border-box;\n\tfont-family: ${value('font.family.default')};\n\n\t${isDisabledModifier(css`\n\t\tcursor: not-allowed;\n\t`)};\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\tfont-size: 11px;\n\t\t\tpadding: ${spacing(0, 2)};\n\t\t\theight: ${value('size.height.button.extra-small')};\n\t\t\tline-height: 12px;\n\t\t`,\n\t\tsm: css`\n\t\t\tpadding: ${spacing(0, 3)};\n\t\t\theight: ${value('size.height.button.small')};\n\t\t\t${typography('body.action.caption')};\n\t\t\tborder-radius: ${value('radius.button.small')};\n\t\t`,\n\t\tmd: css`\n\t\t\tpadding: ${spacing(0, 3)};\n\t\t\theight: ${value('size.height.button.default')};\n\t\t\t${typography('body.action.small')};\n\t\t\tborder-radius: ${value('radius.button.default')};\n\t\t`,\n\t\tlg: css`\n\t\t\tpadding: ${spacing(0, 4)};\n\t\t\theight: ${value('size.height.button.large')};\n\t\t\t${typography('body.action.base')};\n\t\t`,\n\t})}\n\n\t${variants('$appearance', {\n\t\taccent: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.primary.default')};\n\t\t\t\t--button-appearance-secondary-color: ${value('color.text.action.primary')};\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.primary.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.primary.hover')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-secondary-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.disabled')};\n\t\t\t\t--button-appearance-tertiary-color: ${value('color.border.disabled')};\n\t\t\t\t--button-appearance-quaternary-color: ${value('color.background.surface.middle')};\n\t\t\t`,\n\t\t}),\n\t\tdanger: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.danger.default')};\n\t\t\t\t--button-appearance-secondary-color: ${value('color.text.action.danger')};\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.danger.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.action.danger.hover')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-secondary-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.disabled')};\n\t\t\t\t--button-appearance-tertiary-color: ${value('color.border.disabled')};\n\t\t\t\t--button-appearance-quaternary-color: ${value('color.background.surface.middle')};\n\t\t\t`,\n\t\t}),\n\t\twarning: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.deprecated.interactive.yellow.idle')};\n\t\t\t\t--button-appearance-secondary-color: ${value('color.deprecated.content.buttonText2')};\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-secondary-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-primary-color: ${value('color.background.disabled')};\n\t\t\t\t--button-appearance-tertiary-color: ${value('color.border.disabled')};\n\t\t\t\t--button-appearance-quaternary-color: ${value('color.background.surface.middle')};\n\t\t\t`,\n\t\t}),\n\t})};\n\n\t${variants('$variant', {\n\t\tprimary: css<ButtonProps>`\n\t\t\tbackground-color: var(--button-appearance-primary-color);\n\t\t\tcolor: var(--button-appearance-secondary-color);\n\t\t`,\n\t\tsecondary: css<ButtonProps>`\n\t\t\tbackground-color: transparent;\n\t\t\tborder-width: 1px;\n\t\t\tborder-color: var(--button-appearance-primary-color);\n\t\t\tcolor: var(--button-appearance-primary-color);\n\n\t\t\t${isDisabledModifier(css`\n\t\t\t\tcolor: var(--button-appearance-secondary-color);\n\t\t\t\tborder: 1px solid var(--button-appearance-tertiary-color);\n\t\t\t\tbackground-color: var(--button-appearance-quaternary-color);\n\t\t\t`)}\n\t\t`,\n\t\ttertiary: css<ButtonProps>`\n\t\t\tbackground-color: transparent;\n\t\t\tborder-color: transparent;\n\t\t\tcolor: var(--button-appearance-primary-color);\n\n\t\t\t${isDisabledModifier(css`\n\t\t\t\tcolor: var(--button-appearance-secondary-color);\n\t\t\t`)}\n\t\t`,\n\t})};\n`;\n\nexport const Content = styled.span<{ $isHidden: boolean; $size: Size }>`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\tgap: ${spacing(1)};\n\t\t`,\n\t\tsm: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t\tmd: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t\tlg: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t})}\n\n\t${modifier(\n\t\t'$isHidden',\n\t\tcss`\n\t\t\topacity: 0;\n\t\t`,\n\t)}\n`;\n\nexport const Text = styled.span<{ $size: Size }>`\n\tposition: relative;\n\talign-items: center;\n\tdisplay: inline-flex;\n\twhite-space: nowrap;\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tsm: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tmd: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tlg: css`\n\t\t\ttop: -1px; // Make text visually centered\n\t\t`,\n\t})}\n`;\n\nexport const StyledLoadingSign = styled(LoadingSignIcon)`\n\tfont-size: 1.3em;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n","import type { Placement } from '@floating-ui/react';\nimport { css, excludeProps, styled, variants } from '@lokalise/styled';\nimport type { HTMLAttributes, RefAttributes } from 'react';\n\nimport { typography, value } from '../../utils/theme';\n\nconst bottom = css`\n\ttop: -5px;\n\n\t&::before {\n\t\tborder-left-width: 1px;\n\t\tborder-left-style: solid;\n\t\tborder-top-width: 1px;\n\t\tborder-top-style: solid;\n\t}\n`;\nconst top = css`\n\tbottom: -5px;\n\n\t&::before {\n\t\tborder-right-width: 1px;\n\t\tborder-right-style: solid;\n\t\tborder-bottom-width: 1px;\n\t\tborder-bottom-style: solid;\n\t}\n`;\nconst left = css`\n\tright: -5px;\n\n\t&::before {\n\t\tborder-right-width: 1px;\n\t\tborder-right-style: solid;\n\t\tborder-top-width: 1px;\n\t\tborder-top-style: solid;\n\t}\n`;\nconst right = css`\n\tleft: -5px;\n\n\t&::before {\n\t\tborder-left-width: 1px;\n\t\tborder-left-style: solid;\n\t\tborder-bottom-width: 1px;\n\t\tborder-bottom-style: solid;\n\t}\n`;\n\nexport type ArrowProps = {\n\tplacement?: Placement;\n} & HTMLAttributes<HTMLElement> &\n\tRefAttributes<HTMLElement>;\n\nexport const Arrow = styled.div.withConfig({ shouldForwardProp: excludeProps(['placement']) })<ArrowProps>`\n\tposition: absolute;\n\twidth: 8px;\n\theight: 8px;\n\tz-index: ${value('zIndex.hide')};\n\n\t&::before {\n\t\tposition: absolute;\n\t\twidth: 8px;\n\t\theight: 8px;\n\t\tz-index: ${value('zIndex.hide')};\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\ttransform: rotate(45deg);\n\t\tbackground-color: ${value('color.background.surface.default')};\n\t\tborder-color: ${value('color.border.default')};\n\t}\n\n\t${variants(\n\t\t'placement',\n\t\t{\n\t\t\ttop,\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tright,\n\t\t\t'right-end': right,\n\t\t\t'right-start': right,\n\t\t\t'left-start': left,\n\t\t\t'auto-end': css``,\n\t\t\t'auto-start': css``,\n\t\t\tauto: css``,\n\t\t\t'bottom-end': bottom,\n\t\t\t'bottom-start': bottom,\n\t\t\t'left-end': left,\n\t\t\t'top-end': top,\n\t\t\t'top-start': top,\n\t\t},\n\t\t'auto',\n\t)}\n`;\n\nexport const Content = styled.div<HTMLAttributes<HTMLElement>>`\n\tpadding: 0;\n\tborder-radius: ${value('radius.tooltip')};\n\tbackground-color: ${value('color.background.surface.default')};\n\tborder: 1px solid ${value('color.border.default')};\n\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n\tz-index: ${value('zIndex.popover')};\n\tcolor: ${value('color.text.default')};\n\t${typography('body.small.default')};\n\twidth: max-content;\n`;\n","import { css, styled } from '@lokalise/styled';\n\nconst commonStyles = css`\n\tpointer-events: all;\n\tbox-sizing: border-box;\n\tcolor: var(--louis-svgicon-color);\n\tfill: currentColor;\n\tfont-size: var(--louis-svgicon-size);\n`;\n\nexport const SvgRoot = styled.svg`\n\t${commonStyles};\n\twidth: 1em;\n\theight: 1em;\n`;\n"],"names":[],"sourceRoot":""}