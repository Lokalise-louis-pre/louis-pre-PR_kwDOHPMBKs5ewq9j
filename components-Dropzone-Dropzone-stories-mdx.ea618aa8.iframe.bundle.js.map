{"version":3,"file":"components-Dropzone-Dropzone-stories-mdx.ea618aa8.iframe.bundle.js","mappings":";AA2BA;AACA;AACA;AAKA;AACA;ACxBA","sources":["webpack://@lokalise/louis/./src/components/Dropzone/styles.ts","webpack://@lokalise/louis/./src/components/Dropzone/Dropzone.stories.mdx"],"sourcesContent":["import { css, modifier, styled } from '@lokalise/styled';\n\nimport { spacing, value } from '../../utils/theme';\n\ninterface ContainerProps {\n\tisDragAccept: boolean;\n\tisDragReject: boolean;\n}\n\nexport const YourStyledComponent = styled.div<Partial<ContainerProps>>`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: ${spacing(4)};\n\tborder-radius: ${value('radius.m')};\n\tfont-family: ${value('font.family.graphik')};\n\tbackground-color: ${value('color.background.surface.middle')};\n\tborder: 2px dashed ${value('color.border.default')};\n\ttransition:\n\t\tborder-color ease-in-out ${value('transition.default')},\n\t\tbackground-color ease-in-out ${value('transition.default')};\n\tcursor: pointer;\n\n\t${modifier(\n\t\t'isDragAccept',\n\t\tcss`\n\t\t\tborder-color: ${value('color.border.active')};\n\t\t\tbackground-color: ${value('color.background.action.secondary.hover')};\n\t\t`,\n\t)};\n\t${modifier(\n\t\t'isDragReject',\n\t\tcss`\n\t\t\tborder-color: ${value('color.background.action.danger.default')};\n\t\t\tbackground-color: ${value('color.background.danger')};\n\t\t`,\n\t)}\n`;\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"/home/runner/work/louis/louis/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport { Meta, Story, Canvas, ArgsTable } from '@storybook/blocks';\nimport { Dropzone } from '.';\nimport { ImageMimeType } from './mimeTypes';\nimport { YourStyledComponent } from './styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const Template = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsx(Dropzone, { ...rest,\n    children: state => children(state)\n  });\n};\nexport const MaxFileSizeTemplate = ({\n  children,\n  onDrop\n}) => {\n  return /*#__PURE__*/_jsx(Dropzone, {\n    maxSize: 1024 ** 2,\n    accept: ImageMimeType,\n    multiple: false,\n    onDrop: (acceptedFiles, fileRejections, event) => {\n      fileRejections.length && alert('File size exceeds 1MB! it will not be uploaded. Check onDrop event callback in actions panel for more info.');\n      onDrop(acceptedFiles, fileRejections, event);\n    },\n    children: state => children(state)\n  });\n};\n\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, { ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {})\n  }) : _createMdxContent();\n\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\",\n      p: \"p\",\n      code: \"code\",\n      pre: \"pre\",\n      h3: \"h3\"\n    }, _provideComponents(), props.components);\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Meta, {\n        title: \"Components/Dropzone\",\n        component: Dropzone,\n        parameters: {\n          controls: {\n            sort: 'requiredFirst'\n          }\n        }\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n        id: \"dropzone\",\n        children: \"Dropzone\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#overview\",\n            children: \"Overview\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#figma-design-file\",\n            children: \"Figma Design File\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#props\",\n            children: \"Props\"\n          })\n        }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"#examples\",\n            children: \"Examples\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          id: \"overview\",\n          children: \"Overview\"\n        }), \"\\nDropzone is used to allow users select or drop files to upload. The component provides a standardized wrapper around the\\n\", /*#__PURE__*/_jsx(_components.a, {\n          href: \"https://react-dropzone.js.org/\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"React Dropzone\"\n        }), \" library. Dropzone component is almost a headless UI helper. It does not\\nprovide any UI out of the box except for a \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"div\"\n        }), \" with dashed borders that changes color according to \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"isDragAccept\"\n        }), \" and \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"isDragReject\"\n        }), \"\\nstate. It's up to the consumer to define the component look and feel using \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"children\"\n        }), \" render function that exposes dropzone\\nstate.\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Dropzone state:\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-ts\",\n          children: \"type DropzoneState = {\\n\\tisFocused: boolean;\\n\\tisDragActive: boolean;\\n\\tisDragAccept: boolean;\\n\\tisDragReject: boolean;\\n\\tisFileDialogActive: boolean;\\n\\tacceptedFiles: File[];\\n\\tfileRejections: [\\n\\t\\t{\\n\\t\\t\\tfile: File;\\n\\t\\t\\terrors: {\\n\\t\\t\\t\\tmessage: string;\\n\\t\\t\\t\\tcode: string;\\n\\t\\t\\t}[];\\n\\t\\t},\\n\\t];\\n\\trootRef: React.RefObject<HTMLElement>;\\n\\tinputRef: React.RefObject<HTMLInputElement>;\\n} & { open: () => void };\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Dropzone exports:\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"Dropzone\"\n          }), \": Main component\"]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"MimeTypes\"\n          }), \": Object of all supported MIME types with file extension as a \", /*#__PURE__*/_jsx(_components.code, {\n            children: \"key\"\n          }), \" and MIME type as \", /*#__PURE__*/_jsx(_components.code, {\n            children: \"value\"\n          })]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"ImageMimeType\"\n          }), \": Array of all images MIME types\"]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"PdfMimeType\"\n          }), \": PDF MIME type\"]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"MsWordMimeType\"\n          }), \": Array of MS Word files MIME type\"]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"MsExcelMimeType\"\n          }), \": Array of MS Excel files MIME type\"]\n        }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n          children: [/*#__PURE__*/_jsx(_components.code, {\n            children: \"CsvMimeType\"\n          }), \": CSV MIME type\"]\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"installation\",\n        children: \"Installation\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"npm install @lokalise/louis\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"usage\",\n        children: \"Usage\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import { Dropzone } from '@lokalise/louis';\\nimport { YourStyledComponent } from './styles';\\n\\nexport default () => (\\n\\t<Dropzone>\\n\\t\\t{({ isDragActive, isDragAccept, isDragReject, getRootProps }) => (\\n\\t\\t\\t<YourStyledComponent {...getRootProps()} isDragReject={isDragReject} isDragAccept={isDragAccept}>\\n\\t\\t\\t\\t{isDragAccept && <p>All files will be accepted</p>}\\n\\t\\t\\t\\t{isDragReject && <p>Some files will be rejected</p>}\\n\\t\\t\\t\\t{!isDragActive && <p>Drop some files here ...</p>}\\n\\t\\t\\t</YourStyledComponent>\\n\\t\\t)}\\n\\t</Dropzone>\\n);\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"figma-design-file\",\n        children: \"Figma Design File\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n        children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n          children: /*#__PURE__*/_jsx(_components.a, {\n            href: \"https://www.figma.com/file/Wf4pR0TCW8VOyooxzpjXOU/Louis-Designer-Artifacts?type=design&node-id=7-18572&mode=design&t=fyipQ4zM85wvT7od-4\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Figma Source File | Dropzone\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"props\",\n        children: \"Props\"\n      }), \"\\n\", /*#__PURE__*/_jsx(ArgsTable, {\n        of: Dropzone\n      }), \"\\n\", /*#__PURE__*/_jsx(\"h2\", {\n        id: \"examples\",\n        children: \"Examples\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"default\",\n        children: \"Default\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Default\",\n          args: {\n            children: ({\n              isDragActive,\n              isDragAccept,\n              isDragReject,\n              getRootProps\n            }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n              isDragReject: isDragReject,\n              isDragAccept: isDragAccept,\n              children: [isDragAccept && /*#__PURE__*/_jsx(_components.p, {\n                children: \"All files will be accepted\"\n              }), isDragReject && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Some files will be rejected\"\n              }), !isDragActive && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Drop some files here ...\"\n              })]\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"singlefileselection\",\n        children: \"SingleFileSelection\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"SingleFileSelection\",\n          args: {\n            multiple: false,\n            children: ({\n              isDragActive,\n              isDragAccept,\n              isDragReject,\n              getRootProps\n            }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n              isDragReject: isDragReject,\n              isDragAccept: isDragAccept,\n              children: [isDragAccept && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Your file will be accepted\"\n              }), isDragReject && /*#__PURE__*/_jsx(_components.p, {\n                children: \"You're trying to drop multiple files.\"\n              }), !isDragActive && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Drop single file here ...\"\n              })]\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"mimetypes\",\n        children: \"MimeTypes\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"MimeTypes\",\n          args: {\n            accept: ImageMimeType,\n            children: ({\n              isDragActive,\n              isDragAccept,\n              isDragReject,\n              getRootProps\n            }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n              isDragReject: isDragReject,\n              isDragAccept: isDragAccept,\n              children: [isDragAccept && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Your file is an image\"\n              }), isDragReject && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Your file is not an image\"\n              }), !isDragActive && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Drop image file(s) here ...\"\n              })]\n            })\n          },\n          children: Template.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"maxsize\",\n        children: \"MaxSize\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"MaxSize\",\n          args: {\n            children: ({\n              isDragActive,\n              isDragAccept,\n              isDragReject,\n              getRootProps\n            }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n              isDragReject: isDragReject,\n              isDragAccept: isDragAccept,\n              children: [isDragAccept && /*#__PURE__*/_jsx(_components.p, {\n                children: \"File can be dropped as it matches allowed file types and number of files\"\n              }), isDragReject && /*#__PURE__*/_jsx(_components.p, {\n                children: \"File cannot be dropped it does not match allowed file types or number of files\"\n              }), !isDragActive && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Drop a file here ...\"\n              })]\n            })\n          },\n          children: MaxFileSizeTemplate.bind({})\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"disabled\",\n        children: \"Disabled\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        withSource: \"open\",\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Disabled\",\n          args: {\n            disabled: true,\n            children: ({\n              isDragActive,\n              isDragAccept,\n              isDragReject,\n              getRootProps\n            }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n              isDragReject: isDragReject,\n              isDragAccept: isDragAccept,\n              children: [isDragAccept && /*#__PURE__*/_jsx(_components.p, {\n                children: \"All files will be accepted\"\n              }), isDragReject && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Some files will be rejected\"\n              }), !isDragActive && /*#__PURE__*/_jsx(_components.p, {\n                children: \"Drop some files here ...\"\n              })]\n            })\n          },\n          children: Template.bind({})\n        })\n      })]\n    });\n  }\n}\n/* ========= */\n\n\nexport const defaultStory = Template.bind({});\ndefaultStory.storyName = 'Default';\ndefaultStory.args = {\n  children: ({\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps\n  }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n    isDragReject: isDragReject,\n    isDragAccept: isDragAccept,\n    children: [isDragAccept && /*#__PURE__*/_jsx(\"p\", {\n      children: \"All files will be accepted\"\n    }), isDragReject && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Some files will be rejected\"\n    }), !isDragActive && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Drop some files here ...\"\n    })]\n  })\n};\ndefaultStory.parameters = {\n  storySource: {\n    source: '({\\n  children,\\n  ...rest\\n}) => {\\n  return <Dropzone {...rest}>{state => children(state)}</Dropzone>;\\n}'\n  }\n};\nexport const singleFileSelection = Template.bind({});\nsingleFileSelection.storyName = 'SingleFileSelection';\nsingleFileSelection.args = {\n  multiple: false,\n  children: ({\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps\n  }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n    isDragReject: isDragReject,\n    isDragAccept: isDragAccept,\n    children: [isDragAccept && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Your file will be accepted\"\n    }), isDragReject && /*#__PURE__*/_jsx(\"p\", {\n      children: \"You're trying to drop multiple files.\"\n    }), !isDragActive && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Drop single file here ...\"\n    })]\n  })\n};\nsingleFileSelection.parameters = {\n  storySource: {\n    source: '({\\n  children,\\n  ...rest\\n}) => {\\n  return <Dropzone {...rest}>{state => children(state)}</Dropzone>;\\n}'\n  }\n};\nexport const mimeTypes = Template.bind({});\nmimeTypes.storyName = 'MimeTypes';\nmimeTypes.args = {\n  accept: ImageMimeType,\n  children: ({\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps\n  }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n    isDragReject: isDragReject,\n    isDragAccept: isDragAccept,\n    children: [isDragAccept && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Your file is an image\"\n    }), isDragReject && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Your file is not an image\"\n    }), !isDragActive && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Drop image file(s) here ...\"\n    })]\n  })\n};\nmimeTypes.parameters = {\n  storySource: {\n    source: '({\\n  children,\\n  ...rest\\n}) => {\\n  return <Dropzone {...rest}>{state => children(state)}</Dropzone>;\\n}'\n  }\n};\nexport const maxSize = MaxFileSizeTemplate.bind({});\nmaxSize.storyName = 'MaxSize';\nmaxSize.args = {\n  children: ({\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps\n  }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n    isDragReject: isDragReject,\n    isDragAccept: isDragAccept,\n    children: [isDragAccept && /*#__PURE__*/_jsx(\"p\", {\n      children: \"File can be dropped as it matches allowed file types and number of files\"\n    }), isDragReject && /*#__PURE__*/_jsx(\"p\", {\n      children: \"File cannot be dropped it does not match allowed file types or number of files\"\n    }), !isDragActive && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Drop a file here ...\"\n    })]\n  })\n};\nmaxSize.parameters = {\n  storySource: {\n    source: '({\\n  children,\\n  onDrop\\n}) => {\\n  return <Dropzone maxSize={1024 ** 2} accept={ImageMimeType} multiple={false} onDrop={(acceptedFiles, fileRejections, event) => {\\n    fileRejections.length && alert(\\\"File size exceeds 1MB! it will not be uploaded. Check onDrop event callback in actions panel for more info.\\\");\\n    onDrop(acceptedFiles, fileRejections, event);\\n  }}>\\n\t\t\t{state => children(state)}\\n\t\t</Dropzone>;\\n}'\n  }\n};\nexport const disabled = Template.bind({});\ndisabled.storyName = 'Disabled';\ndisabled.args = {\n  disabled: true,\n  children: ({\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps\n  }) => /*#__PURE__*/_jsxs(YourStyledComponent, { ...getRootProps(),\n    isDragReject: isDragReject,\n    isDragAccept: isDragAccept,\n    children: [isDragAccept && /*#__PURE__*/_jsx(\"p\", {\n      children: \"All files will be accepted\"\n    }), isDragReject && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Some files will be rejected\"\n    }), !isDragActive && /*#__PURE__*/_jsx(\"p\", {\n      children: \"Drop some files here ...\"\n    })]\n  })\n};\ndisabled.parameters = {\n  storySource: {\n    source: '({\\n  children,\\n  ...rest\\n}) => {\\n  return <Dropzone {...rest}>{state => children(state)}</Dropzone>;\\n}'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Dropzone',\n  parameters: {\n    controls: {\n      sort: \"requiredFirst\"\n    }\n  },\n  component: Dropzone,\n  tags: ['stories-mdx'],\n  includeStories: [\"defaultStory\", \"singleFileSelection\", \"mimeTypes\", \"maxSize\", \"disabled\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = { ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;"],"names":[],"sourceRoot":""}